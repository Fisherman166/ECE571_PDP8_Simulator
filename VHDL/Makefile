# Generated by vmake version 10.4c

# Define path to each library
LIB_MODELSIM_LIB = /pkgs/mentor/questa/10.4c/modelsim/modeltech/linux_x86_64/../modelsim_lib
LIB_IEEE_PROPOSED = /u/koppen2/ECE571/Project/VHDL/modelsim/ieee_proposed/
LIB_IEEE = /pkgs/mentor/questa/10.4c/modelsim/modeltech/linux_x86_64/../ieee
LIB_STD = /pkgs/mentor/questa/10.4c/modelsim/modeltech/linux_x86_64/../std
LIB_WORK = work

# Define path to each design unit
IEEE__math_real = $(LIB_IEEE)/_lib.qdb
IEEE__numeric_std = $(LIB_IEEE)/_lib.qdb
IEEE__std_logic_textio = $(LIB_IEEE)/_lib.qdb
IEEE__std_logic_arith = $(LIB_IEEE)/_lib.qdb
IEEE__std_logic_unsigned = $(LIB_IEEE)/_lib.qdb
MODELSIM_LIB__util = $(LIB_MODELSIM_LIB)/_lib.qdb
IEEE_PROPOSED__standard_additions = $(LIB_IEEE_PROPOSED)/_lib.qdb
IEEE_PROPOSED__standard_textio_additions = $(LIB_IEEE_PROPOSED)/_lib.qdb
IEEE__std_logic_1164 = $(LIB_IEEE)/_lib.qdb
STD__textio = $(LIB_STD)/_lib.qdb
WORK__top_vhdl__behavioral = $(LIB_WORK)/_lib.qdb
WORK__top_vhdl = $(LIB_WORK)/_lib.qdb
WORK__testbenchvhdl__behavioral = $(LIB_WORK)/_lib.qdb
WORK__testbenchvhdl = $(LIB_WORK)/_lib.qdb
WORK__state_machine__behavioral = $(LIB_WORK)/_lib.qdb
WORK__state_machine = $(LIB_WORK)/_lib.qdb
WORK__rom__rom_a = $(LIB_WORK)/_lib.qdb
WORK__rom = $(LIB_WORK)/_lib.qdb
WORK__ram__ram_a = $(LIB_WORK)/_lib.qdb
WORK__ram = $(LIB_WORK)/_lib.qdb
WORK__multiply__behavioral = $(LIB_WORK)/_lib.qdb
WORK__multiply = $(LIB_WORK)/_lib.qdb
WORK__micro__behavioral = $(LIB_WORK)/_lib.qdb
WORK__micro = $(LIB_WORK)/_lib.qdb
WORK__memory__behavioral = $(LIB_WORK)/_lib.qdb
WORK__memory = $(LIB_WORK)/_lib.qdb
WORK__front_panel__behavioral = $(LIB_WORK)/_lib.qdb
WORK__front_panel = $(LIB_WORK)/_lib.qdb
WORK__eae__behavioral = $(LIB_WORK)/_lib.qdb
WORK__eae = $(LIB_WORK)/_lib.qdb
WORK__divide__behavioral = $(LIB_WORK)/_lib.qdb
WORK__divide = $(LIB_WORK)/_lib.qdb
WORK__cpu__behavioral = $(LIB_WORK)/_lib.qdb
WORK__cpu = $(LIB_WORK)/_lib.qdb
WORK__adder12__behavioral = $(LIB_WORK)/_lib.qdb
WORK__adder12 = $(LIB_WORK)/_lib.qdb
WORK__adder__behavioral = $(LIB_WORK)/_lib.qdb
WORK__adder = $(LIB_WORK)/_lib.qdb
VCOM = vcom
VLOG = vlog
VOPT = vopt
SCCOM = sccom

whole_library : $(LIB_WORK)/_lib.qdb

$(LIB_WORK)/_lib.qdb : Adder.vhd \
		$(STD__textio) \
		$(IEEE__std_logic_1164) Adder12.vhd \
		$(IEEE__numeric_std) \
		$(IEEE__math_real) \
		$(IEEE__std_logic_textio) \
		$(STD__textio) \
		$(IEEE__std_logic_1164) CPU.vhd \
		$(IEEE__std_logic_arith) \
		$(IEEE__std_logic_unsigned) \
		$(STD__textio) \
		$(IEEE__std_logic_1164) Divide.vhd \
		$(IEEE__std_logic_arith) \
		$(IEEE__std_logic_unsigned) \
		$(STD__textio) \
		$(IEEE__std_logic_1164) EAE.vhd \
		$(STD__textio) \
		$(IEEE__std_logic_1164) front_panel.vhd \
		$(IEEE__std_logic_unsigned) \
		$(IEEE__std_logic_arith) \
		$(STD__textio) \
		$(IEEE__std_logic_1164) Memory.vhd \
		$(IEEE__std_logic_unsigned) \
		$(IEEE__std_logic_arith) \
		$(STD__textio) \
		$(IEEE__std_logic_1164) Micro.vhd \
		$(IEEE__std_logic_arith) \
		$(IEEE__std_logic_unsigned) \
		$(STD__textio) \
		$(IEEE__std_logic_1164) Multiply.vhd \
		$(IEEE__std_logic_arith) \
		$(IEEE__std_logic_unsigned) \
		$(STD__textio) \
		$(IEEE__std_logic_1164) RAM.vhd \
		$(IEEE__numeric_std) \
		$(STD__textio) \
		$(IEEE__std_logic_1164) ROM.vhd \
		$(IEEE__numeric_std) \
		$(STD__textio) \
		$(IEEE__std_logic_1164) State_Machine.vhd \
		$(STD__textio) \
		$(IEEE__std_logic_1164) TestBenchVHDL.vhd \
		$(IEEE_PROPOSED__standard_textio_additions) \
		$(IEEE_PROPOSED__standard_additions) \
		$(MODELSIM_LIB__util) \
		$(IEEE__std_logic_unsigned) \
		$(IEEE__std_logic_arith) \
		$(IEEE__std_logic_textio) \
		$(IEEE__numeric_std) \
		$(STD__textio) \
		$(IEEE__std_logic_1164) Top_VHDL.vhd \
		$(STD__textio) \
		$(IEEE__std_logic_1164)
	$(VCOM) -2002 -work work Adder.vhd
	$(VCOM) -2002 -work work Adder12.vhd
	$(VCOM) -2002 -work work CPU.vhd
	$(VCOM) -2002 -work work Divide.vhd
	$(VCOM) -2002 -work work EAE.vhd
	$(VCOM) -2002 -work work front_panel.vhd
	$(VCOM) -2002 -work work Memory.vhd
	$(VCOM) -2002 -work work Micro.vhd
	$(VCOM) -2002 -work work Multiply.vhd
	$(VCOM) -2002 -work work RAM.vhd
	$(VCOM) -2002 -work work ROM.vhd
	$(VCOM) -2002 -work work State_Machine.vhd
	$(VCOM) -2002 -work work TestBenchVHDL.vhd
	$(VCOM) -2002 -work work Top_VHDL.vhd

clean:
	rm -rf work transcript


